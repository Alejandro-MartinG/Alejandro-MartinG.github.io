---
layout: post
title: Blogging Like a Hacker
category: tech
---
I don't remember exactly how many blogs I created the past years, but this one feels like the one. I had at least one blog on Tumblr and three or four on Wordpress. Tumblr's brand didn't fit my vision about my blog. I wanted a truly personal blog. A blog where I could share my thoughts on technology but at the same time, keep it open to explore other areas. For example, at some point I might wanted to blog about music or personal thoughts on a viral and important matter, you name it. Tumblr wasn't the right place for this purpose. On the other hand, Wordpress had a more elastic brand. You can use it for whatever purpose you want, but it was too complicated for me and of course too heavy. Moreover, migrating a blog was a pain in the ass. After creating and deleting several blogs, I gave up Wordpress. One week ago a <a href="http://dkotzias.com" target="_blank">friend<a/> told me about <a href="http://www.jekyllrb.com" target="_blank">Jekyll</a> and I decided to give it a try. An easy decision, given my zero options at the time.

First of all, its origins are in GitHub, a company that I really appreciate and support. My personal opinion about GitHub is that they changed our field, by transforming the day-to-day interaction with the best version control system into a User Experience. Git is complicated but powerfull and GitHub's client Apps for <a href="https://mac.github.com" target="_blank">Mac</a> and <a href="https://windows.github.com" target="_blank">Windows</a> made it easy and playful to use. Also their <a href="https://github.com" target="_blank">web access</a> promoted coding as a social network, which was ingenious because it worked as a motivation for people to open source their work and help others. Back to Jekyll. Yes, reading that it was created in GitHub was more than enought for me to give it a try.

I started from the official <a href="http://jekyllrb.com/docs/home" target="_blank">documentation</a>, but soon I realized that it would be more fun to not reinvent the wheel, but fork an existing open source blog that I liked. I searched a few themes, chose the <a href="http://kirbyt.github.io/timeline-jekyll-theme" target="_blank">Timeline</a> and started playing with it. Most of Jekyll themes are simple and intuitive, but Timeline won me because of the <strike>Timeline</strike> Career page (duh). Also I loved the white on black text, because it improves significantly the reading experience and my vision was to create a website/blog that people would like to spend a few minutes on it without getting tired. The first day that I spent on it was to understand how it works and the result was to just replace existing placeholders and variables to create my Timeline. But that wasn't enought, I needed a blog. I couldn't spend more than one day at the time, so I just published it for free on <a href="https://pages.github.com" target="_blank">GitHub Pages</a>. I hadn't used GitHub Pages for a while, so I had forgoten how awesome it is to just push your changes to origin/master and update your website out of the box. Also I was thrilled that I was able to use Emacs as my editor. My geek inside me was overwhelmed.

One week later, I was able to spend one more day on it. The goal was to somehow integrate the Blogging feature in the Timeline theme, but preety soon I realized that Timeline's Career functionality was hijacking the Blogging capabilities of Jekyll. Bummer. This feature was one of the two main reasons that I picked Timeline, but lacking the Blog feature was not an option. I wanted it badly. I tried to see if I could manipulate Jekyll in order to support both the Career and Blog features, but in order to manage that I had to hack Jekyll and I had only one day to spend on this. So I ripped off Career's generated HTML code into a file and started reading how to use Jekyll's API to create a Blog. This <a href="http://erjjones.github.io/blog/How-I-built-my-blog-in-one-day" target="_blank">post</a> was my most valuable resource. After a while and a <a href="https://github.com/kirbyt/timeline-jekyll-theme/pull/2" target="_blank">bug fix</a> on Timeline I was there. I opened the website from my phone to see how it renders and it was rendering as expected. By the way, I fixed a bug on my navigation bar from my bed, using my phone, by editing a source file on GitHub. How awesome is that?

Writing blog posts using <a href="http://daringfireball.net/projects/markdown" target="_blank">Markdown</a> and Emacs is exciting and keeping my draft posts on git <a href="https://github.com/PanosSakkos/panossakkos.github.io/tree/blogging-like-a-hacker" target="_blank">branches</a> is kick-ass. The next step is to make the ripped off Career page HTML autogenerated by defining custom Jekyll variables and then I will open source it and write a post to serve as a guide on how to fork it and make it fit you own needs.

    git commit -a -m "Finished post"
    git checkout master
    git merge _blogging-like-a-hacker
    git push origin master:master

:)
